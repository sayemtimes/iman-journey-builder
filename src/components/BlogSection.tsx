import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { BookOpen, Calendar, User, Search, Tag, ArrowRight } from 'lucide-react';

const BlogSection = () => {
  const navigate = useNavigate();
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');

  const blogPosts = [
    {
      id: 1,
      title: "‡¶á‡¶ñ‡¶≤‡¶æ‡¶∏: ‡¶Ü‡¶Æ‡¶≤‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶æ‡¶£‡¶∂‡¶ï‡ßç‡¶§‡¶ø",
      titleEn: "Sincerity: The Soul of Deeds",
      excerpt: "‡¶á‡¶ñ‡¶≤‡¶æ‡¶∏ ‡¶õ‡¶æ‡¶°‡¶º‡¶æ ‡¶ï‡ßã‡¶®‡ßã ‡¶Ü‡¶Æ‡¶≤ ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶π‡¶Ø‡¶º ‡¶®‡¶æ‡•§ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶® ‡¶á‡¶ñ‡¶≤‡¶æ‡¶∏ ‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶∏‡¶π‡¶ú ‡¶â‡¶™‡¶æ‡¶Ø‡¶º‡¶∏‡¶Æ‡ßÇ‡¶π‡•§",
      category: "‡¶Ü‡¶ß‡ßç‡¶Ø‡¶æ‡¶§‡ßç‡¶Æ‡¶ø‡¶ï‡¶§‡¶æ",
      author: "‡¶∂‡¶æ‡¶á‡¶ñ ‡¶Ü‡¶¨‡¶¶‡ßÅ‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶æ‡¶®",
      date: "‡ßß‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ßÆ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "ü§≤",
      tags: ["‡¶á‡¶ñ‡¶≤‡¶æ‡¶∏", "‡¶Ü‡¶Æ‡¶≤", "‡¶§‡¶æ‡¶ï‡¶ì‡¶Ø‡¶º‡¶æ"]
    },
    {
      id: 2,
      title: "‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡ßá‡¶∞ ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø",
      titleEn: "Modern Methods of Quran Study",
      excerpt: "‡¶¨‡ßç‡¶Ø‡¶∏‡ßç‡¶§ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶® ‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®‡¶ï‡ßá ‡¶Ö‡¶≠‡ßç‡¶Ø‡¶æ‡¶∏‡ßá ‡¶™‡¶∞‡¶ø‡¶£‡¶§ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®? ‡¶ú‡¶æ‡¶®‡ßÅ‡¶® ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶ü‡¶ø‡¶™‡¶∏‡•§",
      category: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ",
      author: "‡¶°. ‡¶´‡¶æ‡¶§‡¶ø‡¶Æ‡¶æ ‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶",
      date: "‡ßß‡ß¶ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ß¨ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "üìñ",
      tags: ["‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®", "‡¶Ö‡¶ß‡ßç‡¶Ø‡¶Ø‡¶º‡¶®", "‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø"]
    },
    {
      id: 3,
      title: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶£‡¶æ‡¶¨‡¶≤‡ßÄ",
      titleEn: "Qualities of Islamic Leadership",
      excerpt: "‡¶∞‡¶æ‡¶∏‡ßÇ‡¶≤ (‡¶∏‡¶æ.) ‡¶è‡¶∞ ‡¶Ü‡¶¶‡¶∞‡ßç‡¶∂‡ßá ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶è‡¶ï‡¶ú‡¶® ‡¶∏‡¶´‡¶≤ ‡¶®‡ßá‡¶§‡¶æ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º? ‡¶ú‡¶æ‡¶®‡ßÅ‡¶® ‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨‡ßá‡¶∞ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ‡•§",
      category: "‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨",
      author: "‡¶á‡¶Æ‡¶æ‡¶Æ ‡¶∏‡¶æ‡¶á‡¶´‡ßÅ‡¶≤ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ",
      date: "‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ßß‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "üë•",
      tags: ["‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨", "‡¶∏‡ßÄ‡¶∞‡¶æ‡¶§", "‡¶Ü‡¶¶‡¶∞‡ßç‡¶∂"]
    },
    {
      id: 4,
      title: "‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ‡¶Ø‡¶º ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶¶‡¶ø‡¶ï‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ",
      titleEn: "Islamic Guidelines for Time Management",
      excerpt: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶¶‡ßÉ‡¶∑‡ßç‡¶ü‡¶ø‡¶§‡ßá ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨ ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶¨‡ßá‡¶®‡•§",
      category: "‡¶ú‡ßÄ‡¶¨‡¶®‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ",
      author: "‡¶Æ‡ßÅ‡¶´‡¶§‡¶ø ‡¶Ü‡¶¨‡ßÅ‡¶≤ ‡¶ï‡¶æ‡¶∏‡ßá‡¶Æ",
      date: "‡ß®‡ßÆ ‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ß≠ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "‚è∞",
      tags: ["‡¶∏‡¶Æ‡¶Ø‡¶º", "‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ", "‡¶ú‡ßÄ‡¶¨‡¶®‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ"]
    },
    {
      id: 5,
      title: "‡¶™‡¶æ‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ø‡¶ï ‡¶¨‡¶®‡ßç‡¶ß‡¶®‡ßá ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶¨‡ßã‡¶ß",
      titleEn: "Islamic Values in Family Bonds",
      excerpt: "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ‡¶∞ ‡¶Ü‡¶≤‡ßã‡¶ï‡ßá ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßÅ‡¶ñ‡ßÄ ‡¶ì ‡¶∏‡¶Æ‡ßÉ‡¶¶‡ßç‡¶ß ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞ ‡¶ó‡¶°‡¶º‡¶¨‡ßá‡¶®‡•§",
      category: "‡¶™‡¶æ‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ø‡¶ï",
      author: "‡¶∂‡¶æ‡¶Ø‡¶º‡¶ñ‡¶æ ‡¶Ü‡¶Ø‡¶º‡ßá‡¶∂‡¶æ ‡¶¨‡ßá‡¶ó‡¶Æ",
      date: "‡ß®‡ß¶ ‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ßØ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
      tags: ["‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞", "‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï", "‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶¨‡ßã‡¶ß"]
    },
    {
      id: 6,
      title: "‡¶¶‡ßÅ‡¶Ü‡¶∞ ‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡¶æ‡¶ö‡¶æ‡¶∞ ‡¶ì ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶∞ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø",
      titleEn: "Etiquette and Effective Methods of Dua",
      excerpt: "‡¶¶‡ßÅ‡¶Ü ‡¶ï‡¶¨‡ßÅ‡¶≤ ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶∂‡¶∞‡ßç‡¶§‡¶∏‡¶Æ‡ßÇ‡¶π ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßÅ‡¶Ü‡¶∞ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ ‡¶ì ‡¶Ü‡¶¶‡¶¨‡•§",
      category: "‡¶á‡¶¨‡¶æ‡¶¶‡¶§",
      author: "‡¶π‡¶æ‡¶´‡ßá‡¶ú ‡¶Æ‡ßÅ‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶á‡¶â‡¶∏‡ßÅ‡¶´",
      date: "‡ßß‡ß´ ‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      readTime: "‡ß´ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü",
      image: "ü§≤",
      tags: ["‡¶¶‡ßÅ‡¶Ü", "‡¶á‡¶¨‡¶æ‡¶¶‡¶§", "‡¶Ü‡¶¶‡¶¨"]
    }
  ];

  const categories = [
    { value: 'all', label: '‡¶∏‡¶¨ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø' },
    { value: '‡¶Ü‡¶ß‡ßç‡¶Ø‡¶æ‡¶§‡ßç‡¶Æ‡¶ø‡¶ï‡¶§‡¶æ', label: '‡¶Ü‡¶ß‡ßç‡¶Ø‡¶æ‡¶§‡ßç‡¶Æ‡¶ø‡¶ï‡¶§‡¶æ' },
    { value: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ', label: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ' },
    { value: '‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨', label: '‡¶®‡ßá‡¶§‡ßÉ‡¶§‡ßç‡¶¨' },
    { value: '‡¶ú‡ßÄ‡¶¨‡¶®‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ', label: '‡¶ú‡ßÄ‡¶¨‡¶®‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ' },
    { value: '‡¶™‡¶æ‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ø‡¶ï', label: '‡¶™‡¶æ‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ø‡¶ï' },
    { value: '‡¶á‡¶¨‡¶æ‡¶¶‡¶§', label: '‡¶á‡¶¨‡¶æ‡¶¶‡¶§' }
  ];

  const filteredPosts = blogPosts.filter(post => {
    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
    const matchesCategory = selectedCategory === 'all' || post.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const handleReadMore = (postId: number) => {
    console.log(`Reading post ${postId}`);
    navigate(`/blog/${postId}`);
  };

  return (
    <section id="blog" className="py-20 bg-white">
      <div className="container mx-auto px-4">
        <div className="text-center mb-16">
          <div className="inline-flex items-center justify-center w-16 h-16 bg-blue-100 rounded-full mb-6">
            <BookOpen className="text-blue-600" size={32} />
          </div>
          <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
            ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßÄ ‡¶¨‡ßç‡¶≤‡¶ó
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Islamic knowledge, guidance, and inspiration for modern Muslim life
          </p>
        </div>

        {/* Search and Filter */}
        <div className="max-w-4xl mx-auto mb-12">
          <div className="flex flex-col md:flex-row gap-4 mb-8">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" size={20} />
              <Input
                type="text"
                placeholder="‡¶¨‡ßç‡¶≤‡¶ó ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <select
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
              className="px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent"
            >
              {categories.map(category => (
                <option key={category.value} value={category.value}>
                  {category.label}
                </option>
              ))}
            </select>
          </div>

          {/* Results count */}
          <p className="text-gray-600 mb-8">
            {filteredPosts.length} ‡¶ü‡¶ø ‡¶¨‡ßç‡¶≤‡¶ó ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶ó‡ßá‡¶õ‡ßá
          </p>
        </div>

        {/* Blog Posts Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto">
          {filteredPosts.map((post) => (
            <Card key={post.id} className="group hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2 border-0 overflow-hidden">
              <div className="h-48 bg-gradient-to-br from-green-400 to-blue-500 relative flex items-center justify-center">
                <span className="text-6xl">{post.image}</span>
                <div className="absolute top-4 right-4">
                  <span className="bg-white/90 backdrop-blur-sm text-gray-800 text-xs px-2 py-1 rounded-full">
                    {post.category}
                  </span>
                </div>
              </div>
              
              <CardHeader className="pb-3">
                <CardTitle className="text-lg font-bold text-gray-900 leading-tight group-hover:text-green-600 transition-colors">
                  {post.title}
                </CardTitle>
                <p className="text-sm text-gray-500 font-medium">
                  {post.titleEn}
                </p>
              </CardHeader>
              
              <CardContent>
                <p className="text-gray-600 mb-4 text-sm line-clamp-3">
                  {post.excerpt}
                </p>
                
                <div className="flex items-center justify-between text-xs text-gray-500 mb-4">
                  <div className="flex items-center space-x-1">
                    <User size={12} />
                    <span>{post.author}</span>
                  </div>
                  <div className="flex items-center space-x-1">
                    <Calendar size={12} />
                    <span>{post.date}</span>
                  </div>
                </div>

                <div className="flex items-center justify-between text-xs text-gray-500 mb-4">
                  <span>‡¶™‡¶°‡¶º‡¶§‡ßá ‡¶∏‡¶Æ‡¶Ø‡¶º: {post.readTime}</span>
                  <div className="flex flex-wrap gap-1">
                    {post.tags.slice(0, 2).map((tag, index) => (
                      <span key={index} className="bg-gray-100 text-gray-600 px-2 py-1 rounded-full text-xs">
                        <Tag size={10} className="inline mr-1" />
                        {tag}
                      </span>
                    ))}
                  </div>
                </div>
                
                <Button 
                  onClick={() => handleReadMore(post.id)}
                  className="w-full bg-gradient-to-r from-green-500 to-blue-500 hover:from-green-600 hover:to-blue-600 text-white rounded-full transition-all duration-300 group-hover:shadow-lg"
                  variant="default"
                >
                  ‡¶Ü‡¶∞‡¶ì ‡¶™‡¶°‡¶º‡ßÅ‡¶®
                  <ArrowRight className="ml-2" size={16} />
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* Load More */}
        {filteredPosts.length === 0 ? (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg">‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡ßç‡¶≤‡¶ó ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ñ‡ßã‡¶Å‡¶ú ‡¶ï‡¶∞‡ßÅ‡¶®‡•§</p>
          </div>
        ) : (
          <div className="text-center mt-12">
            <Button
              size="lg"
              variant="outline"
              className="border-2 border-green-600 text-green-600 hover:bg-green-50 px-8 py-4 text-lg rounded-full transition-all duration-300"
            >
              ‡¶Ü‡¶∞‡¶ì ‡¶¨‡ßç‡¶≤‡¶ó ‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
            </Button>
          </div>
        )}
      </div>
    </section>
  );
};

export default BlogSection;
